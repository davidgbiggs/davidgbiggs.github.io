{"version":3,"sources":["webpack:///./src/layouts/style-layout.tsx","webpack:///./src/components/BoxForm.tsx","webpack:///./src/pages/forgot-password.tsx","webpack:///./src/components/Page.tsx","webpack:///./src/components/Container.tsx"],"names":["StyleLayout","children","BoxForm","onSubmit","errorText","className","useState","showError","setShowError","useEffect","event","preventDefault","role","ForgotPasswordPage","setEmail","isLoading","setIsLoading","handleEmailChange","target","value","WhiteSpaceDiv","HeadingContainer","ResetHeading","buttonText","beforeButtonChildren","htmlFor","disabled","type","onChange","id","aria-describedby","StyledPage","dimensions","containerPadding","Page","StyledContainer","getEmSize","widths","lg","Container"],"mappings":"sHAAA,oCAWeA,IAJsB,SAAC,GAAiB,IAAfC,EAAe,EAAfA,SACtC,OAAO,yBAAMA,K,oCCRf,4BAoCeC,IA5BkB,SAAC,GAAiD,IAA/CD,EAA+C,EAA/CA,SAAUE,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UAAgB,EAC/CC,oBAAS,GAApCC,EAD0E,KAC/DC,EAD+D,KAgBjF,OARAC,qBAAU,WAEND,EADgB,SAAdJ,KAKH,CAACA,IAGF,sBAAMC,UAAS,QAAUA,EAAaF,SAdxC,SAAsBO,GACpBA,EAAMC,iBACNR,EAASO,KAaNH,EACC,qBAAKF,UAAU,qBAAqBO,KAAK,SAAzC,GACMR,GAEJ,KACHH,K,sJCyEQY,UA5Ff,WAA8B,MACFP,mBAAS,IAArBQ,GADc,aAEMR,oBAAS,GAApCS,EAFqB,KAEVC,EAFU,OAGMV,mBAAS,QAApCF,EAHqB,KAK5B,SAASa,EAAkBP,GACzBI,EAASJ,EAAMQ,OAAOC,OANI,KAmC5B,IAAMC,EAAgB,mBAAH,oBAAG,CAAH,gDAIbC,EAAmB,mBAAH,oBAAG,CAAH,6CAIhBC,EAAe,iBAAH,oBAAG,CAAH,2DA0BlB,OACE,cAAC,IAAD,KACE,cAAC,IAAD,KACE,cAAC,IAAD,KACE,cAAC,IAAD,KAIE,cAACF,EAAD,UACA,cAAC,IAAD,CACEG,WAAW,iBACXpB,SAvEZ,SAA0BO,GACxBA,EAAMC,iBACNK,GAAa,IAsEHZ,UAAWA,EACXoB,qBAlC2B,WACrC,OACE,gCACE,cAACH,EAAD,KACE,cAACC,EAAD,yCAEF,qBAAKjB,UAAU,cACb,uBAAOoB,QAAQ,sBAAf,SACA,uBACEC,SAAUX,EACVY,KAAK,QACLC,SAAUX,EACVZ,UAAU,eACVwB,GAAG,qBACHC,mBAAiB,iBAqBff,UAAWA,U,wFC1FnBgB,EAAa,mBAAH,mBAAG,CAAH,kDAIHC,IAAWC,iBAJR,2BAcDC,IAFmB,SAAC,GAAD,IAAGjC,EAAH,EAAGA,SAAUI,EAAb,EAAaA,UAAb,OAA6B,cAAC0B,EAAD,CAAY1B,UAAWA,GAAYJ,K,kGCX5FkC,EAAkB,mBAAH,oBAAG,CAAH,6EAKNC,YAAUC,IAAOC,IALX,OAcNC,IAF6B,SAAC,GAAD,IAAGtC,EAAH,EAAGA,SAAUI,EAAb,EAAaA,UAAb,OAA6B,cAAC8B,EAAD,CAAiB9B,UAAWA,GAAYJ","file":"component---src-pages-forgot-password-tsx-cbbe390cbfb88d39e10b.js","sourcesContent":["import React from 'react'\nimport './style-layout.scss'\n\ntype Props = {\n  children?: React.ReactNode\n}\n\nconst StyleLayout: React.FC<Props> = ({ children }) => {\n  return <div>{children}</div>\n}\n\nexport default StyleLayout\n","import React, { FormEvent, useState, useEffect } from 'react'\n\ninterface Props {\n  onSubmit(event: FormEvent<HTMLFormElement>): void\n  errorText: string\n  className?: string\n}\n\nconst BoxForm: React.FC<Props> = ({ children, onSubmit, errorText, className }) => {\n  const [showError, setShowError] = useState(false)\n\n  function handleSubmit(event: FormEvent<HTMLFormElement>): void {\n    event.preventDefault()\n    onSubmit(event)\n  }\n\n  useEffect(() => {\n    if (errorText === 'none') {\n      setShowError(false)\n    } else {\n      setShowError(true)\n    }\n  }, [errorText])\n\n  return (\n    <form className={`form ${className}`} onSubmit={handleSubmit}>\n      {showError ? (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          {`${errorText}`}\n        </div>\n      ) : null}\n      {children}\n    </form>\n  )\n}\n\nexport default BoxForm\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { ChangeEvent, FormEvent, useState } from 'react'\n\n// import firebase from 'firebase'\nimport { navigate, Link } from 'gatsby'\nimport styled from '@emotion/styled'\nimport Page from '../components/Page'\nimport Container from '../components/Container'\nimport BoxForm from '../components/BoxForm'\nimport IndexLayout from '../layouts/index'\nimport StyleLayout from '../layouts/style-layout'\n\nfunction ForgotPasswordPage() {\n  const [email, setEmail] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const [errorText, setErrorText] = useState('none')\n\n  function handleEmailChange(event: ChangeEvent<HTMLInputElement>) {\n    setEmail(event.target.value)\n  }\n\n  function handleFormSubmit(event: FormEvent<HTMLFormElement>) {\n    event.preventDefault()\n    setIsLoading(true)\n    // firebase\n    //   .auth()\n    //   .sendPasswordResetEmail(email)\n    //   .then(() => {\n    //     console.log('signed in')\n    //     navigate('/account/')\n    //   })\n    //   .catch(function(error) {\n    //     // Handle Errors here.\n    //     switch (error.code) {\n    //       case 'auth/user-not-found':\n    //         setErrorText(`We couldn't find any records for that user. Did you type your email correctly?`)\n    //         break\n    //       case 'auth/wrong-password':\n    //         setErrorText('There was an error signing in. Please double check your password.')\n    //         break\n    //       default:\n    //         setErrorText('There was an unknown error signing in.')\n    //     }\n    //   })\n    //   .finally(() => setIsLoading(false))\n  }\n\n  const WhiteSpaceDiv = styled.div`\n    padding-bottom: 50px;\n  `\n\n  const HeadingContainer = styled.div`\n    text-align: center;\n  `\n\n  const ResetHeading = styled.p`\n    font-size: 25px;\n    font-weight: bold;\n  `\n\n  const BeforeButtonChildren: React.FC = () => {\n    return (\n      <>\n        <HeadingContainer>\n          <ResetHeading>Please enter your email address</ResetHeading>\n        </HeadingContainer>\n        <div className=\"form-group\">\n          <label htmlFor=\"exampleInputEmail1\">Email</label>\n          <input\n            disabled={isLoading}\n            type=\"email\"\n            onChange={handleEmailChange}\n            className=\"form-control\"\n            id=\"exampleInputEmail1\"\n            aria-describedby=\"emailHelp\"\n          />\n        </div>\n      </>\n    )\n  }\n\n  return (\n    <IndexLayout>\n      <StyleLayout>\n        <Page>\n          <Container>\n            {/* <input value={email} onChange={handleEmailChange} />\n          <input value={password} onChange={handlePasswordChange} />\n          <button type=\"button\">hi</button> */}\n            <WhiteSpaceDiv>&nbsp;</WhiteSpaceDiv>\n            <BoxForm\n              buttonText=\"Reset Password\"\n              onSubmit={handleFormSubmit}\n              errorText={errorText}\n              beforeButtonChildren={BeforeButtonChildren}\n              isLoading={isLoading}\n            />\n          </Container>\n        </Page>\n      </StyleLayout>\n    </IndexLayout>\n  )\n}\n\nexport default ForgotPasswordPage\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nimport { dimensions } from '../styles/variables'\n\nconst StyledPage = styled.div`\n  display: block;\n  flex: 1;\n  position: relative;\n  padding: ${dimensions.containerPadding}rem;\n  margin-bottom: 3rem;\n`\n\ninterface PageProps {\n  className?: string\n}\n\nconst Page: React.FC<PageProps> = ({ children, className }) => <StyledPage className={className}>{children}</StyledPage>\n\nexport default Page\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nimport { widths } from '../styles/variables'\nimport { getEmSize } from '../styles/mixins'\n\nconst StyledContainer = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;\n  max-width: ${getEmSize(widths.lg)}em;\n`\n\ninterface ContainerProps {\n  className?: string\n}\n\nconst Container: React.FC<ContainerProps> = ({ children, className }) => <StyledContainer className={className}>{children}</StyledContainer>\n\nexport default Container\n"],"sourceRoot":""}